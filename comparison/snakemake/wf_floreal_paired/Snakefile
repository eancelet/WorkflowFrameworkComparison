import os

REFERENCE = config['reference']

READS_DIR = config['reads_dir']

SAMPLES = config['samples']

ADAPT_1 = config['adapt1']
ADAPT_2 = config['adapt2']


rule all:
    input:
        expand("fastqc/{sample}_R1_fastqc.zip", sample=SAMPLES),
        expand("cutadapt/{sample}_R1.fastq.gz", sample=SAMPLES),
        expand("map/{sample}_Aligned.sortedByCoord.out.bam", sample=SAMPLES)


rule fastqc:
    input:
        r1 = os.path.join(READS_DIR, "{sample}_R1.fastq.gz"),
        r2 = os.path.join(READS_DIR, "{sample}_R2.fastq.gz")
    output:
        "fastqc/{sample}_R1_fastqc.zip"
    shell:
        "fastqc -o fastqc {input.r1} {input.r2}"


rule cutadapt:
    input:
        r1 = os.path.join(READS_DIR, "{sample}_R1.fastq.gz"),
        r2 = os.path.join(READS_DIR, "{sample}_R2.fastq.gz")
    output:
        r1 = os.path.join("cutadapt", "{sample}_R1.fastq.gz"),
        r2 = os.path.join("cutadapt", "{sample}_R2.fastq.gz")
    shell:
        "cutadapt -a {ADAPT_1} -A {ADAPT_2} -o {output.r1} -p {output.r2} {input}"

rule index:
    input:
        ref = REFERENCE
    output:
        "star_index/Genome",
        dir = "star_index"
    threads: 4
    shell:
        """
        STAR --runThreadN 4 --runMode genomeGenerate --genomeDir {output.dir} --genomeFastaFiles {input.ref} \
        --outFileNamePrefix {output.dir}/
        """

rule map:
    input:
        ref = "star_index",
        r1 = os.path.join("cutadapt", "{sample}_R1.fastq.gz"),
        r2 = os.path.join("cutadapt", "{sample}_R2.fastq.gz")
    output:
        bam = os.path.join("map", "{sample}_Aligned.sortedByCoord.out.bam")
    threads: 4
    shell:
        """
        STAR --genomeDir {input.ref} --readFilesIn {input.r1} {input.r2} --readFilesCommand zcat \
        --outFileNamePrefix map/{wildcards.sample}_ --runThreadN 4 --outSAMtype BAM SortedByCoordinate
        """